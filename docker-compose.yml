version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: hokm-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-hokm_db}
      POSTGRES_USER: ${POSTGRES_USER:-hokm_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-hokm_password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hokm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-hokm_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: hokm-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - hokm-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hokm-backend
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${BACKEND_PORT:-3000}
      DATABASE_URL: postgresql://${POSTGRES_USER:-hokm_user}:${POSTGRES_PASSWORD:-hokm_password}@postgres:5432/${POSTGRES_DB:-hokm_db}
      REDIS_URL: redis://redis:6379
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      JWT_SECRET: ${JWT_SECRET}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:5173}
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hokm-network
    volumes:
      - ./backend/src:/app/src
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:3000}
        VITE_WS_URL: ${VITE_WS_URL:-ws://localhost:3000}
    container_name: hokm-frontend
    ports:
      - "${FRONTEND_PORT:-5173}:80"
    depends_on:
      - backend
    networks:
      - hokm-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  hokm-network:
    driver: bridge